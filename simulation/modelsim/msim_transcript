# Reading C:/altera/13.0sp1/modelsim_ase/tcl/vsim/pref.tcl 
# do BUS_MUX_COMPARE_run_msim_gate_vhdl.do 
# if {[file exists gate_work]} {
# 	vdel -lib gate_work -all
# }
# vlib gate_work
# vmap work gate_work
# Copying c:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied c:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {BUS_MUX_COMPARE_8_1200mv_85c_slow.vho}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package VITAL_Timing
# -- Loading package VITAL_Primitives
# -- Loading package cycloneive_atom_pack
# -- Loading package cycloneive_components
# -- Compiling entity BUS_MUX_COMPARE
# -- Compiling architecture structure of BUS_MUX_COMPARE
# 
vsim work.bus_mux_compare
# vsim work.bus_mux_compare 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.vital_timing(body)
# Loading ieee.vital_primitives(body)
# Loading cycloneive.cycloneive_atom_pack(body)
# Loading cycloneive.cycloneive_components
# Loading work.bus_mux_compare(structure)
# Loading cycloneive.cycloneive_io_ibuf(arch)
# Loading ieee.std_logic_arith(body)
# Loading cycloneive.cycloneive_io_obuf(arch)
# Loading cycloneive.cycloneive_lcell_comb(vital_lcell_comb)
add wave -position end  sim:/bus_mux_compare/Q

wave create -driver freeze -pattern repeater -initialvalue UUUU -period 800ps -sequence { 0001  } -repeat 1 -range 3 0 -starttime 0ps -endtime 800ps sim:/bus_mux_compare/H
wave create -driver freeze -pattern repeater -initialvalue UUUU -period 800ps -sequence { 0010  } -repeat 1 -range 3 0 -starttime 0ps -endtime 800ps sim:/bus_mux_compare/G
wave create -driver freeze -pattern repeater -initialvalue UUUU -period 800ps -sequence { 0011  } -repeat forever -range 3 0 -starttime 0ps -endtime 800ps sim:/bus_mux_compare/F
wave create -driver freeze -pattern repeater -initialvalue UUUU -period 800ps -sequence { 0100  } -repeat 1 -range 3 0 -starttime 0ps -endtime 800ps sim:/bus_mux_compare/E
wave create -driver freeze -pattern repeater -initialvalue UUUU -period 800ps -sequence { 0101  } -repeat forever -range 3 0 -starttime 0ps -endtime 800ps sim:/bus_mux_compare/D
wave create -driver freeze -pattern repeater -initialvalue UUUU -period 800ps -sequence { 0110  } -repeat 1 -range 3 0 -starttime 0ps -endtime 800ps sim:/bus_mux_compare/C
wave create -driver freeze -pattern repeater -initialvalue UUUU -period 800ps -sequence { 0111  } -repeat 1 -range 3 0 -starttime 0ps -endtime 800ps sim:/bus_mux_compare/B
wave create -driver freeze -pattern repeater -initialvalue UUUU -period 800ps -sequence { 1000  } -repeat 1 -range 3 0 -starttime 0ps -endtime 800ps sim:/bus_mux_compare/A
wave create -driver freeze -pattern counter -startvalue 000 -endvalue 111 -type Range -direction Up -period 100ps -step 1 -repeat 1 -range 2 0 -starttime 0ps -endtime 800ps sim:/bus_mux_compare/sel
add wave -position end  sim:/bus_mux_compare/Q
add wave -position end  sim:/bus_mux_compare/result
run -all
wave editwrite -file D:/Projects/Vano/QUARTUS/CC_L3.2.2/simulation/modelsim/wave.do
